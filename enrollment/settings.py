"""
Django settings for enrollment project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
from dotenv import load_dotenv  # imports env
import os  # helps to access environment variables
import datetime

load_dotenv()  # initialize env

BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = os.environ.get('SECRET_KEY')
DEBUG = True
ALLOWED_HOSTS = ["*"]

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    'django_seed',
    'api',  # Your app name
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'Enrollment.middleware.ReactMiddleware',
]

ASGI_APPLICATION = 'enrollment.asgi.application'  # For asynchronous support

# CORS settings to allow frontend to communicate
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    'your-frontend.up.railway.app',  
]
CORS_ALLOW_CREDENTIALS = True  # Enable credentials (cookies)


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'api.authentication.CookiesJWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ]
}

SIMPLE_JWT = {
    # "ACCESS_TOKEN_LIFETIME": timedelta(minutes=30),
    "ACCESS_TOKEN_LIFETIME": timedelta(days=1),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
    "ROTATE_REFRESH_TOKENS": False,
    "BLACKLIST_AFTER_ROTATION": False,
    "UPDATE_LAST_LOGIN": False,
    'AUTH_COOKIE': 'access_token',
    'AUTH_COOKIE_REFRESH': 'refresh_token',
    'AUTH_COOKIE_SECURE': False,
    'AUTH_COOKIE_HTTP_ONLY': True,
    'AUTH_COOKIE_PATH': '/',
    'AUTH_COOKIE_SAMESITE': 'Lax',
}

CSRF_COOKIE_SECURE = False
SESSION_COOKIE_SECURE = False

ROOT_URLCONF = 'enrollment.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, '../Frontend/build')],  # Path to React build files
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

STATICFILES_DIRS = [os.path.join(BASE_DIR, '../Frontend/build/static')]

WSGI_APPLICATION = 'enrollment.wsgi.application'

# Database settings

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.environ.get('DB_NAME'),
        'USER': os.environ.get('DB_USER'),
        'HOST': os.environ.get('DB_HOST'),
        'PASSWORD': os.environ.get('DB_PASS'),
        'PORT': os.environ.get('DB_PORT'),
        'OPTIONS': {
            'ssl': {
                'ca': os.path.join(BASE_DIR, os.environ.get('DB_SSL_CA')),
            },
        },
    }
}

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',},
]

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

JAZZMIN_SETTINGS = {
    "site_title": "Enrollment Admin",
    "site_header": "Enrollment System",
    "site_logo": "/images/Uni_Logo.png",  # Ensure correct path to logo
    "welcome_sign": "Welcome to the Enrollment System Admin",
    "copyright": f"Enrollment System Â© {datetime.datetime.now().year}",
    "search_model": "auth.User",  # Model to search by default
    "topmenu_links": [
        {"name": "Home", "url": "admin:index", "permissions": ["auth.view_user"]},
        {"name": "Enrollment System", "url": "http://localhost:3000/", "new_window": True},
    ],
    "usermenu_links": [
        {"name": "Support", "url": "https://support.example.com", "new_window": True},
    ],
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
        # "api.address": "fa-solid fa-house",
        "api.acadtermbilling": "fa-solid fa-money-bill",
        "api.enrollmentdate": "fa-solid fa-calendar",
        "api.receipt": "fa-solid fa-receipt",
        "api.billing": "fa-solid fa-money-bill",
        "api.course": "fa-solid fa-book",
        "api.enrollment": "fa-solid fa-clipboard-check",
        "api.grade": "fa-solid fa-graduation-cap",
        "api.instructor": "fa-solid fa-chalkboard-teacher",
        "api.prerequisite": "fa-solid fa-link",
        "api.schedule": "fa-solid fa-calendar-alt",
        "api.student": "fa-solid fa-user-graduate",
        "api.sectioning": "fa-solid fa-section",
        "api.program": "fa-solid fa-microchip",
    },

    "related_modal_active": True,  # X_FRAME_OPTIONS must be SAMEORIGIN
    "changeform_format": "horizontal_tabs",  # Horizontal tabs in the change form
}

X_FRAME_OPTIONS = "SAMEORIGIN"

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"


# Email settings for sending reset emails
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.environ.get('EMAIL_HOST')  # Or another SMTP provider
EMAIL_PORT = os.environ.get('EMAIL_PORT')
EMAIL_USE_TLS = os.environ.get('EMAIL_USE_TLS')
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')  # Your email address
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')  # Your email password or app password

# DEFAULT_FROM_EMAIL = 'no-reply@yourdomain.com'  # The sender email address


